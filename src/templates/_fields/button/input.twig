{% import '_includes/forms.twig' as forms %}
{# {% do dd(field.getErrors()) %} #}
{% namespace field.handle %}
    <div class="flex-fields button-wrapper">
		
        {{ forms.textField({
            label: field.attributeLabel('text'),
            instructions: field.attributeHint('text'),
            attribute: 'text',
            id: 'text',
            name: 'text',
            value: value.text,
            required: true,
            fieldClass: 'width-25'
        }) }}
        {{ forms.lightswitchField({
            label: field.getAttributeLabel('target'),
            instructions: field.getAttributeHint('target'),
            attribute: 'target',
            id: 'target',
            name: 'target',
            on: 'target' in value|keys and value.target is defined ? value.target : false,
            first: true,
            fieldClass: 'width-75',
        }) }}
        {{ forms.selectizeField({
            label: field.getAttributeLabel('tag'),
            instructions: field.getAttributeHint('tag'),
            attribute: 'tag',
            id: 'tag',
            name: 'tag',
            options: [
                {
                    value: '',
                    label: 'Select link style',
                },
                {
                    value: 'a',
                    label: 'Text',
                },
                {
                    value: 'button',
                    label: 'Button',
                },
            ],
            value: value.tag,
            required: true,
            fieldClass: 'width-25',
            class: 'fullwidth',
            toggle: true,
            targetPrefix: 'link-type-',
        }) }}
        {{ forms.selectizeField({
            label: field.getAttributeLabel('linkType'),
            instructions: field.getAttributeHint('linkType'),
            attribute: 'linkType',
            id: 'linkType',
            name: 'linkType',
            options: [{
                value: '-',
                label: 'Not linked',
            }]|merge(field.getAllowedLinkTypes()),
            value: value.linkType,
            fieldClass: 'width-25',
            class: 'fullwidth',
            toggle: true,
            targetPrefix: 'link-type-',
        }) }}
        {% if 'entry' in value|keys %}
        {% tag 'div' with {
            id: 'link-type-entry',
            class: 'width-50 ' ~ (value.linkType != 'entry' ? 'hidden' : null),
        } %}
            {{ forms.elementSelectField({
                label: field.getAttributeLabel('entry'),
                instructions: field.getAttributeHint('entry'),
                attribute: 'entry',
                id: 'entry',
                name: 'entry',
                elementType: 'craft\\elements\\Entry',
                elements: value.entry|length ? craft.entries.id(value.entry).all() : [],
                required: true,
                limit: 1,
                fieldClass: 'width-50',
            }) }}
        {% endtag %}
        {% endif %}
        {% if 'asset' in value|keys %}
        {% tag 'div' with {
            id: 'link-type-asset',
            class: 'width-50 ' ~ (value.linkType != 'asset' ? 'hidden' : null),
        } %}
            {{ forms.elementSelectField({
                label: field.getAttributeLabel('asset'),
                instructions: field.getAttributeHint('asset'),
                attribute: 'asset',
                id: 'asset',
                name: 'asset',
                elementType: 'craft\\elements\\Asset',
                elements: value.asset|length ? craft.assets.id(value.asset).all() : [],
                required: true,
                limit: 1,
                fieldClass: 'width-50',
            }) }}
        {% endtag %}
        {% endif %}
        {% if 'url' in value|keys %}
        {% tag 'div' with {
            id: 'link-type-url',
            class: 'width-50 ' ~ (value.linkType != 'url' ? 'hidden' : null),
        } %}
            {{ forms.textField({
                label: field.getAttributeLabel('url'),
                instructions: field.getAttributeHint('url'),
                attribute: 'url',
                inputmode: 'url',
                id: 'url',
                name: 'url',
                value: 'url' in value|keys ? value.url : '',
                required: true,
                fieldClass: 'width-50',
            }) }}
        {% endtag %}
        {% endif %}
        {% if 'phone' in value|keys %}
        {% tag 'div' with {
            id: 'link-type-phone',
            class: 'width-50 ' ~ (value.linkType != 'phone' ? 'hidden' : null),
        } %}
            {{ forms.textField({
                label: field.getAttributeLabel('phone'),
                instructions: field.getAttributeHint('phone'),
                attribute: 'phone',
                inputmode: 'tel',
                type: 'tel',
                id: 'phone',
                name: 'phone',
                value: 'phone' in value|keys ? value.phone : '',
                required: true,
            }) }}
        {% endtag %}
        {% endif %}
        {% if 'email' in value|keys %}
        {% tag 'div' with {
            id: 'link-type-email',
            class: 'width-50 ' ~ (value.linkType != 'email' ? 'hidden' : null),
        } %}
            {{ forms.textField({
                label: field.getAttributeLabel('email'),
                instructions: field.getAttributeHint('email'),
                attribute: 'email',
                inputmode: 'email',
                id: 'email',
                name: 'email',
                value: 'email' in value|keys ? value.email : '',
                required: true,
                fieldClass: 'width-50',
            }) }}
        {% endtag %}
        {% endif %}
		<hr>
        {{ forms.field({
            label: field.getAttributeLabel('textColor'),
            id: 'textColor',
            name: 'textColor',
            value: value.textColor ?: field.defaultTextColor,
            fieldset: false,
            fieldClass: 'width-25',
        }, 'template:_includes/forms/color') }}
        {{ forms.field({
            label: field.getAttributeLabel('textHoverColor'),
            id: 'textHoverColor',
            name: 'textHoverColor',
            value: value.textHoverColor ?: field.defaultTextHoverColor,
            fieldset: false,
            fieldClass: 'width-25',
        }, 'template:_includes/forms/color') }}
        {{ forms.field({
            label: field.getAttributeLabel('backgroundColor'),
            id: 'backgroundColor',
            name: 'backgroundColor',
            value: value.backgroundColor ?: field.defaultBackgroundColor,
            fieldset: false,
            fieldClass: 'width-25',
        }, 'template:_includes/forms/color') }}
        {{ forms.field({
            label: field.getAttributeLabel('backgroundHoverColor'),
            id: 'backgroundHoverColor',
            name: 'backgroundHoverColor',
            value: value.backgroundHoverColor ?: field.defaultBackgroundHoverColor,
            fieldset: false,
            fieldClass: 'width-25',
        }, 'template:_includes/forms/color') }}
    </div>
	<hr>
{% endnamespace %}

{% css %}
	.button-wrapper > *:before {
		display: none;
	}
{% endcss %}
